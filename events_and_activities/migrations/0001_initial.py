# Generated by Django 4.1 on 2022-10-28 18:29

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import events_and_activities.validators
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EventsActivities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('confirmed', 'confirmed'), ('advertised', 'advertised'), ('completed', 'completed')], default='advertised', max_length=10)),
                ('title', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(flags=re.RegexFlag['MULTILINE'], message='Must contain only the characters [a-zA-Z0-9,.!/;:], with single spaces between words.', regex='^([a-zA-Z0-9,.!\\/;:]+\\s{0,1}[a-zA-Z0-9,.!\\/;:]+)+\\Z'), django.core.validators.MaxLengthValidator(100)])),
                ('when', models.DateTimeField(validators=[events_and_activities.validators.check_date_has_not_occured])),
                ('closing_date', models.DateTimeField(validators=[events_and_activities.validators.check_date_has_not_occured], verbose_name='closing date')),
                ('max_attendees', models.IntegerField(verbose_name='max no. of attendees')),
                ('keywords', models.CharField(blank=True, max_length=75, validators=[django.core.validators.MaxLengthValidator(75), django.core.validators.RegexValidator(message='Must contain comma separated words containing only the characters [a-zA-Z0-9_], with no spaces.', regex='^([\\w]+,{0,1})\\b[^\\s]+')])),
                ('description', models.TextField(max_length=500, validators=[django.core.validators.MaxLengthValidator(500)])),
                ('requirements', models.TextField(max_length=500, validators=[django.core.validators.MaxLengthValidator(500)])),
                ('address_line_one', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(flags=re.RegexFlag['MULTILINE'], message='Must contain only standard alphabetic characters and numbers, with single spaces between words.', regex='^([a-zA-Z0-9]+\\s{0,1}[a-zA-Z0-9]+)+\\Z'), django.core.validators.MaxLengthValidator(100)], verbose_name='Address line 1')),
                ('city_or_town', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='Must contain only standard alphabetic characters, with single spaces between words.', regex='^([a-zA-Z]+\\s{0,1}[a-zA-Z]+)+\\Z'), django.core.validators.MaxLengthValidator(50)], verbose_name='City/Town')),
                ('county', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='Must contain only standard alphabetic characters, with single spaces between words.', regex='^([a-zA-Z]+\\s{0,1}[a-zA-Z]+)+\\Z'), django.core.validators.MaxLengthValidator(50)], verbose_name='County')),
                ('postcode', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message='Must be a valid postcode format.', regex='^(([gG][iI][rR] {0,}0[aA]{2})|((([a-pr-uwyzA-PR-UWYZ][a-hk-yA-HK-Y]?[0-9][0-9]?)|(([a-pr-uwyzA-PR-UWYZ][0-9][a-hjkstuwA-HJKSTUW])|([a-pr-uwyzA-PR-UWYZ][a-hk-yA-HK-Y][0-9][abehmnprv-yABEHMNPRV-Y]))) {0,}[0-9][abd-hjlnp-uw-zABD-HJLNP-UW-Z]{2}))$'), django.core.validators.MaxLengthValidator(10)], verbose_name='Postcode')),
                ('host_user', models.ForeignKey(db_column='username', on_delete=django.db.models.deletion.CASCADE, related_name='events', to=settings.AUTH_USER_MODEL, to_field='username', unique_for_date='when', verbose_name='host')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
