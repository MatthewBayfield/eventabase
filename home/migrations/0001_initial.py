# Generated by Django 4.1 on 2022-10-20 22:44

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('landing_page', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('user', models.OneToOneField(db_column='username', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profile', serialize=False, to=settings.AUTH_USER_MODEL, to_field='username', verbose_name='user')),
                ('first_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(flags=re.RegexFlag['IGNORECASE'], message='Must contain only standard alphabetic characters.', regex='/^[a-z]+$/'), django.core.validators.MaxLengthValidator(50)], verbose_name='first name')),
                ('last_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(flags=re.RegexFlag['IGNORECASE'], message='Must contain only standard alphabetic characters.', regex='/^[a-z]+$/'), django.core.validators.MaxLengthValidator(50)], verbose_name='last name')),
                ('date_of_birth', models.DateField(verbose_name='date of birth')),
                ('sex', models.CharField(choices=[('male', 'male'), ('female', 'female')], max_length=10, verbose_name='sex')),
                ('bio', models.TextField(blank=True, default='', max_length=500, validators=[django.core.validators.MaxLengthValidator(500)], verbose_name='bio')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('user_profile', models.OneToOneField(db_column='profile', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='address', serialize=False, to='home.userprofile', verbose_name='user profile')),
                ('address_line_one', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(flags=[re.RegexFlag['IGNORECASE'], re.RegexFlag['MULTILINE']], message='Must contain only standard alphabetic characters and numbers.', regex='/[a-z0-9]+|([a-z0-9]?<=)\\s(?=[a-z0-9])/'), django.core.validators.MaxLengthValidator(100)], verbose_name='Address line 1')),
                ('city_or_town', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(flags=[re.RegexFlag['IGNORECASE']], message='Must contain only standard alphabetic characters.', regex='/[a-z]+|([a-z]?<=)\\s(?=[a-z])/'), django.core.validators.MaxLengthValidator(50)], verbose_name='City/Town')),
                ('county', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(flags=[re.RegexFlag['IGNORECASE']], message='Must contain only standard alphabetic characters.', regex='/[a-z]+|([a-z]?<=)\\s(?=[a-z])/'), django.core.validators.MaxLengthValidator(50)], verbose_name='County')),
                ('postcode', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message='Must be a valid postcode format.', regex='/^(([gG][iI][rR] {0,}0[aA]{2})|((([a-pr-uwyzA-PR-UWYZ][a-hk-yA-HK-Y]?[0-9][0-9]?)|(([a-pr-uwyzA-PR-UWYZ][0-9][a-hjkstuwA-HJKSTUW])|([a-pr-uwyzA-PR-UWYZ][a-hk-yA-HK-Y][0-9][abehmnprv-yABEHMNPRV-Y]))) {0,}[0-9][abd-hjlnp-uw-zABD-HJLNP-UW-Z]{2}))$/'), django.core.validators.MaxLengthValidator(10)], verbose_name='Postcode')),
                ('latitude', models.DecimalField(decimal_places=4, max_digits=8, validators=[django.core.validators.DecimalValidator(8, 4)])),
                ('longitude', models.DecimalField(decimal_places=4, max_digits=8, validators=[django.core.validators.DecimalValidator(8, 4)])),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
